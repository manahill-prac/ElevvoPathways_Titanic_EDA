{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyP6bU6bHGHsPxiGHBO7BsyH",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/manahill-prac/ElevvoPathways_Titanic_EDA/blob/main/TITANIC_EDA\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# -----------------------------\n",
        "# Titanic EDA - Step 1 & Step 2\n",
        "# -----------------------------\n",
        "\n",
        "# 1️⃣ Import libraries\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "from tabulate import tabulate  # For a pretty table in console\n",
        "import missingno as msno       # For missing value visualization\n",
        "\n",
        "# 2️⃣ Load dataset\n",
        "# Update path if needed - here we load train.csv\n",
        "df = pd.read_csv(\"/content/train.csv\")\n",
        "\n",
        "# 3️⃣ Basic dataset info\n",
        "print(\"📂 Dataset Shape:\", df.shape)\n",
        "print(\"\\n📜 Columns:\", df.columns.tolist())\n",
        "\n",
        "# 4️⃣ Data types & null counts (Pretty Table)\n",
        "data_info = pd.DataFrame({\n",
        "    \"Column\": df.columns,\n",
        "    \"Non-Null Count\": df.notnull().sum(),\n",
        "    \"Missing Count\": df.isnull().sum(),\n",
        "    \"Missing %\": (df.isnull().sum() / len(df) * 100).round(2),\n",
        "    \"Data Type\": df.dtypes\n",
        "}).reset_index(drop=True)\n",
        "\n",
        "print(\"\\n📊 Dataset Info Table:\")\n",
        "print(tabulate(data_info, headers='keys', tablefmt='fancy_grid', showindex=False))\n",
        "\n",
        "# 5️⃣ First 5 rows (sample data)\n",
        "print(\"\\n🔍 Sample Data:\")\n",
        "print(tabulate(df.head(), headers='keys', tablefmt='fancy_grid', showindex=False))\n",
        "\n",
        "# 6️⃣ Quick numerical summary\n",
        "print(\"\\n📈 Numerical Summary:\")\n",
        "print(tabulate(df.describe().T, headers='keys', tablefmt='fancy_grid'))\n",
        "\n",
        "# 7️⃣ Visual Missing Value Matrix\n",
        "plt.figure(figsize=(8, 4))\n",
        "msno.matrix(df)\n",
        "plt.title(\"Missing Data Visualization\", fontsize=14)\n",
        "plt.show()\n",
        "\n",
        "# 8️⃣ Heatmap for missing values\n",
        "plt.figure(figsize=(8, 4))\n",
        "sns.heatmap(df.isnull(), cbar=False, cmap=\"viridis\")\n",
        "plt.title(\"Missing Data Heatmap\", fontsize=14)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "A4caKoc_y-SS",
        "outputId": "6df01ca1-f879-4af3-bd5b-a9b0d5f2ec33"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "📂 Dataset Shape: (891, 12)\n",
            "\n",
            "📜 Columns: ['PassengerId', 'Survived', 'Pclass', 'Name', 'Sex', 'Age', 'SibSp', 'Parch', 'Ticket', 'Fare', 'Cabin', 'Embarked']\n",
            "\n",
            "📊 Dataset Info Table:\n",
            "╒═════════════╤══════════════════╤═════════════════╤═════════════╤═════════════╕\n",
            "│ Column      │   Non-Null Count │   Missing Count │   Missing % │ Data Type   │\n",
            "╞═════════════╪══════════════════╪═════════════════╪═════════════╪═════════════╡\n",
            "│ PassengerId │              891 │               0 │        0    │ int64       │\n",
            "├─────────────┼──────────────────┼─────────────────┼─────────────┼─────────────┤\n",
            "│ Survived    │              891 │               0 │        0    │ int64       │\n",
            "├─────────────┼──────────────────┼─────────────────┼─────────────┼─────────────┤\n",
            "│ Pclass      │              891 │               0 │        0    │ int64       │\n",
            "├─────────────┼──────────────────┼─────────────────┼─────────────┼─────────────┤\n",
            "│ Name        │              891 │               0 │        0    │ object      │\n",
            "├─────────────┼──────────────────┼─────────────────┼─────────────┼─────────────┤\n",
            "│ Sex         │              891 │               0 │        0    │ object      │\n",
            "├─────────────┼──────────────────┼─────────────────┼─────────────┼─────────────┤\n",
            "│ Age         │              714 │             177 │       19.87 │ float64     │\n",
            "├─────────────┼──────────────────┼─────────────────┼─────────────┼─────────────┤\n",
            "│ SibSp       │              891 │               0 │        0    │ int64       │\n",
            "├─────────────┼──────────────────┼─────────────────┼─────────────┼─────────────┤\n",
            "│ Parch       │              891 │               0 │        0    │ int64       │\n",
            "├─────────────┼──────────────────┼─────────────────┼─────────────┼─────────────┤\n",
            "│ Ticket      │              891 │               0 │        0    │ object      │\n",
            "├─────────────┼──────────────────┼─────────────────┼─────────────┼─────────────┤\n",
            "│ Fare        │              891 │               0 │        0    │ float64     │\n",
            "├─────────────┼──────────────────┼─────────────────┼─────────────┼─────────────┤\n",
            "│ Cabin       │              204 │             687 │       77.1  │ object      │\n",
            "├─────────────┼──────────────────┼─────────────────┼─────────────┼─────────────┤\n",
            "│ Embarked    │              889 │               2 │        0.22 │ object      │\n",
            "╘═════════════╧══════════════════╧═════════════════╧═════════════╧═════════════╛\n",
            "\n",
            "🔍 Sample Data:\n",
            "╒═══════════════╤════════════╤══════════╤═════════════════════════════════════════════════════╤════════╤═══════╤═════════╤═════════╤══════════════════╤═════════╤═════════╤════════════╕\n",
            "│   PassengerId │   Survived │   Pclass │ Name                                                │ Sex    │   Age │   SibSp │   Parch │ Ticket           │    Fare │ Cabin   │ Embarked   │\n",
            "╞═══════════════╪════════════╪══════════╪═════════════════════════════════════════════════════╪════════╪═══════╪═════════╪═════════╪══════════════════╪═════════╪═════════╪════════════╡\n",
            "│             1 │          0 │        3 │ Braund, Mr. Owen Harris                             │ male   │    22 │       1 │       0 │ A/5 21171        │  7.25   │ nan     │ S          │\n",
            "├───────────────┼────────────┼──────────┼─────────────────────────────────────────────────────┼────────┼───────┼─────────┼─────────┼──────────────────┼─────────┼─────────┼────────────┤\n",
            "│             2 │          1 │        1 │ Cumings, Mrs. John Bradley (Florence Briggs Thayer) │ female │    38 │       1 │       0 │ PC 17599         │ 71.2833 │ C85     │ C          │\n",
            "├───────────────┼────────────┼──────────┼─────────────────────────────────────────────────────┼────────┼───────┼─────────┼─────────┼──────────────────┼─────────┼─────────┼────────────┤\n",
            "│             3 │          1 │        3 │ Heikkinen, Miss. Laina                              │ female │    26 │       0 │       0 │ STON/O2. 3101282 │  7.925  │ nan     │ S          │\n",
            "├───────────────┼────────────┼──────────┼─────────────────────────────────────────────────────┼────────┼───────┼─────────┼─────────┼──────────────────┼─────────┼─────────┼────────────┤\n",
            "│             4 │          1 │        1 │ Futrelle, Mrs. Jacques Heath (Lily May Peel)        │ female │    35 │       1 │       0 │ 113803           │ 53.1    │ C123    │ S          │\n",
            "├───────────────┼────────────┼──────────┼─────────────────────────────────────────────────────┼────────┼───────┼─────────┼─────────┼──────────────────┼─────────┼─────────┼────────────┤\n",
            "│             5 │          0 │        3 │ Allen, Mr. William Henry                            │ male   │    35 │       0 │       0 │ 373450           │  8.05   │ nan     │ S          │\n",
            "╘═══════════════╧════════════╧══════════╧═════════════════════════════════════════════════════╧════════╧═══════╧═════════╧═════════╧══════════════════╧═════════╧═════════╧════════════╛\n",
            "\n",
            "📈 Numerical Summary:\n",
            "╒═════════════╤═════════╤════════════╤════════════╤═══════╤══════════╤══════════╤═══════╤═════════╕\n",
            "│             │   count │       mean │        std │   min │      25% │      50% │   75% │     max │\n",
            "╞═════════════╪═════════╪════════════╪════════════╪═══════╪══════════╪══════════╪═══════╪═════════╡\n",
            "│ PassengerId │     891 │ 446        │ 257.354    │  1    │ 223.5    │ 446      │ 668.5 │ 891     │\n",
            "├─────────────┼─────────┼────────────┼────────────┼───────┼──────────┼──────────┼───────┼─────────┤\n",
            "│ Survived    │     891 │   0.383838 │   0.486592 │  0    │   0      │   0      │   1   │   1     │\n",
            "├─────────────┼─────────┼────────────┼────────────┼───────┼──────────┼──────────┼───────┼─────────┤\n",
            "│ Pclass      │     891 │   2.30864  │   0.836071 │  1    │   2      │   3      │   3   │   3     │\n",
            "├─────────────┼─────────┼────────────┼────────────┼───────┼──────────┼──────────┼───────┼─────────┤\n",
            "│ Age         │     714 │  29.6991   │  14.5265   │  0.42 │  20.125  │  28      │  38   │  80     │\n",
            "├─────────────┼─────────┼────────────┼────────────┼───────┼──────────┼──────────┼───────┼─────────┤\n",
            "│ SibSp       │     891 │   0.523008 │   1.10274  │  0    │   0      │   0      │   1   │   8     │\n",
            "├─────────────┼─────────┼────────────┼────────────┼───────┼──────────┼──────────┼───────┼─────────┤\n",
            "│ Parch       │     891 │   0.381594 │   0.806057 │  0    │   0      │   0      │   0   │   6     │\n",
            "├─────────────┼─────────┼────────────┼────────────┼───────┼──────────┼──────────┼───────┼─────────┤\n",
            "│ Fare        │     891 │  32.2042   │  49.6934   │  0    │   7.9104 │  14.4542 │  31   │ 512.329 │\n",
            "╘═════════════╧═════════╧════════════╧════════════╧═══════╧══════════╧══════════╧═══════╧═════════╛\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x400 with 0 Axes>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 2500x1000 with 2 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAACAAAAAO4CAYAAABGORbSAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQABAABJREFUeJzs3XV4VNfWx/HvTCYeAgRIcIfg0OLutAWKa4DiBAherEhpcShQoMHdixcrLS3uTvDiTnGJEpl5/+Cdc5MCtXtLaPL7PM99bplz5mRvcjiy19prm2w2mw0RERERERERERERERERERH5VzPHdwNERERERERERERERERERETkv6cEABERERERERERERERERERkQRACQAiIiIiIiIiIiIiIiIiIiIJgBIAREREREREREREREREREREEgAlAIiIiIiIiIiIiIiIiIiIiCQASgAQERERERERERERERERERFJAJQAICIiIiIiIiIiIiIiIiIikgAoAUBERERERERERERERERERCQBUAKAiIiIiIiIiIiIiIiIiIhIAqAEABERERERkf+3Zs0afH19WbNmzT/6c/r374+vry+3bt36R3+O/DUtWrTA19c3vpvxRr6+vrRo0SLOZ9988w2+vr4cPHgwnlr1H7du3cLX15f+/fvHd1NEREREREREEi0lAIiIiIiISIJgDz76+vpSunRpoqOjX7vf5cuXjf0qVar0llv5bjp48KDxd2L/33vvvUf58uVp164dM2fO5N69e/+Tn/VPJz/s2bMHX19f2rZt+4f7fvrpp/j6+rJhw4Z/pC0JUaVKlfTvRkREREREROQdZonvBoiIiIiIiPwvWSwWHj58yM6dO6lcufIr21etWoXZ/Ppc6KpVq1KwYEG8vb3/0Tb26tWL9u3b4+Pj84/+nL8qb968VKxYEYDw8HAePnzI8ePH2b17N4GBgfTp0+eVGejvmlKlSpE2bVr27dvH3bt3SZMmzWv3Cw4O5ueff8bT05Nq1aoBMGbMGMLDw99mc/9rzZo1o3r16qRNmza+m4KPjw/ff/89SZIkie+miIiIiIiIiCRaSgAQEREREZEE5b333uP8+fOsXr36lQSA6Oho1q9fT6lSpTh06NAr302SJMlbCV56e3v/40kGf0e+fPno2rXrK5///PPPDBw4kOHDh+Pq6kqDBg3ioXV/jtlspl69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gBIAREREREREREREREREREREEgAlAIiIiIiIiIiIiIiIiIiIiCQASgAQERERERERERERERERERFJAJQAIPIvd+HCBc6fPx/fzRARERERERERERERERGReKYEAJF/sfPnz1OrVi3GjBmjJAARERERERERERERERGRRE4JACL/YiEhIRQsWJBDhw4xefJkzp07F99NEhEREREREREREREREZF4YrLZbLb4boSI/D02m42jR48SGBjIgQMHqFSpEl27diV37tzx3TQRERERERERERERERERecss8d0AEfl7bDYbJpOJwoULExAQgMlkYtu2bQAEBASQN2/eeG6hiIiIiIiIiIiIiIiIiLxNSgAQ+ZeyWq04ODhgMpkoWrQozZs3Jzo6mj179uDg4EDHjh2VBCAiIiIiIiIiIiIiIiKSiCgBQORfKCYmBgcHBwCWLFnCsWPH2L9/Py4uLkRGRrJnzx6sVitdunTRcgAiIiIiIiIiIiIiIiIiiYTJZrPZ4rsRIvLn2Uv/A4wbN4558+aRPXt2PvjgA1KmTMm2bds4c+YMDx48oFKlSnTt2lVJACIiIiIiIiIiIiIiIiKJgBIARP6l1q5dy2effUbZsmXp06cPOXPmBF4mCPzwww8sXLiQ48ePU7lyZQICAsiTJ088t1hERERERERERERERERE/klaAkDkX8Zms2Gz2dizZw8A7dq1M4L/0dHRWCwWPvjgA9zc3Jg0aRI7d+7EbDbTsWNH8ubNG59NFxEREREREREREREREZF/kDm+GyAir3fz5k1u3rz5yucmk4mwsDDOnj2Li4sLmTNnBl4mBlgsFmw2G2azmVKlSlG5cmWio6PZt28fM2bM4MyZM2+5FyIiIiIiIiIiIiIiIiLytigBQOQdtH//fmrUqMHChQtfmwTg4eFBihQpiIiI4Pz58wDExMQALxMEbDYbjo6ONGvWjKRJk+Lk5MSWLVsYO3Ysjx8/fqt9EREREREREREREREREZG3QwkAIu+gXbt2ERkZyapVq1ixYkWcJIDo6Giio6PJmjUrAD/88AMAFovFSAIAsFqtuLm54eHhQa1atShUqBAVK1bEy8vr7XZGRERERERERERERERERN4KJQCIvIP69etHmzZtCA8PZ/78+XGSACwWCxaLhfr162M2m1m7di0TJ04EwMHBAZvNhslkwmw2c+jQIR48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e7781qhRo1i+fDkVKlTAy8sL+E/i9YABA2jTpg0XL14kRYoU3Lp1i9SpU79S4j99+vSMGzeO3r17c/z4cf6PvfsOk6uu9wf+mZ2d7AxsAokEpF1E0NBBmoIgXi/CKkgHAVGDFxBpUiwocC0UUZoIXDoCEoogoBAJTXpR6QgEECSU0AKbPmd3Zvf8/vC3c3fDprB7kkkmr9fznOecPTPz2c8k88ycne/7fM+3vvWtuPTSS81aC3woAgAsEE888UScfPLJ8cILL8TMmTMjImKttdaKrbfeOrbZZpsoFArxta99LTbaaKPo6uqKm266Kc4777xYZpll4vLLL48lllgidtttt/jb3/4WL7/8cvz3f/93XHzxxbUQQM8X5BEfPJuXxvDLX/4yLr300lh77bXj8MMPjy222KJ2W8+Z/vl8Pk455ZRI0zRuvvnmPiGA7u7u2vUkIyJefvnl2GqrrWLbbbeNYcOGOaNkMXHBBRfEb3/722hvb6/tu+uuu2LrrbeOr3/96zF8+PBYYYUVIiJmO81ozxfYSZLEYYcdFnvvvXd89atfjQjvP4ubnun+N9lkkzj66KPj5JNP/kAIoKmpKdI0jUqlEpMmTYqRI0fGJz7xiYj4v8+uSy65JN58883YaqutYuedd67b82HBmdNnWm//+Z//Geutt1488sgjsccee8Q777wThxxySHzjG9/o82X2mDFjYty4cfGFL3whNtxwwwX1NKiTF198Mb797W9HtVqNyy67rDbguu2228amm25a+5KpJwSw4oorxp577hkXXXRRjBkzJqZOnRqHH354LLXUUhHx70vfXHrppbH00kvHEkssEVtssUUMHz48Jk6cGBE+2xrZQw89FEcccUTkcrnYb7/94tBDD41cLldbeo559t133+ju7o6zzjqr3xDAf/zHf8R3vvOdaGpqiuuvvz7uvvvuGD16dCy33HIRIaDd6Po7vv7LX/4SX/ziF2OLLbaITTbZJHbfffcolUrx3nvvxVVXXRU33nhj7LLLLvGTn/wkIiK+8pWvxAMPPBCTJk2K/fbbL84///zYbLPN6vWUWIBOOeWUuOSSS2LEiBFx4IEHxmqrrdYnoNb7M6i/EMBRRx0VH/vYx2rH5VtuuWVdngf1d9JJJ8WYMWNi6623js0226z2t9azzz4bY8eOjU022aQ2+N9zvfY//elPsffee8dOO+0URx55ZNxyyy3R3Nwc3/jGN2ohgCWXXDL2339/x0OLgTFjxsRFF10Un//85+N73/terL766h+4xN+sOjs7/Z1PHz0z2nzpS1+KQw89tPYdY8S/L0myzjrrxGWXXRZf+9rX4r333ouLL744Nt5448jn87WT1nqstNJKcdppp8X+++8f//znP/tcrgtgXvgrnPnuoYceitGjR8cTTzwRa6+9dmy11VZRKpXi2WefjWuuuSbGjh0bo0ePjq9//esREbWptVpaWuKiiy6K5ZZbLtI0jY997GPR3d0dSy+9dFQqlfjGN74R77zzjqkkFwPnn39+/Pa3v43/+q//ihNPPLHPQEnP1Ef5fL52XaVTTz01tttuu5gxY0Z87WtfiyeeeCKamppqScrLL788/vGPf8SKK64Y6667bu3auDS2X/ziF3H66adHc3Nz7L333vH1r389hg0bFi+88EJcd911ce2110a1Wq1ND3nmmWfGY489VvtjL03TPpcDOP/88+P555+ParVqCq7FTO/pbXu2N9100zj66KNjrbXWivvuuy/OP//82uUAcrlcJEkS+Xw+3n333bjuuutqtcaMGRM33nhjbLTRRq7ftpiYl8+0iH9P6T9kyJDYeeedo7W1Nd5+++34zGc+EzvssEOfs48uvfTSOPfcc2PYsGHxwx/+sDaoS+MaPnx47f95pZVWikKhULtO6T777BM333xzjB8/PiL+HQJYYoklYrvttouvfe1r0dLSEldddVXsvvvu8f3vfz+OPfbYOPDAA2vH66uuump0d3dHpVKJkSNH9gnZ0lgef/zx+M53vhPDhg2LH//4x/G9730vWlpaYsiQIbXPtp4p3CMi/vu//zsOOeSQaGpqil/96lcfuBzAKqusEgceeGBss802seeee9YG/yOESBrZ7I6vX3zxxbjhhhvi4YcfjgMOOCDWX3/9iIj45z//GX/4wx9i6623jpNOOqlW5xOf+ER0d3fHaqutFp2dnXHEEUdEkiT+1m9wJ510Ulx88cXR3Nwc77//fpx88snR3d0dhUIhqtVqv4/pCQGsu+66cfvtt9cuB9DzPuPvssVT70tIHHXUUX1mkZgxY0ZMnjw5vv/970dra2u88847cfnll8ef/vSn2HXXXeN//ud/Yr311otvfvObERFx0003xSWXXFK7jECEz7HFwUsvvRRXXnllLL300nHwwQfXvhea0/99mqbR2dnp73xqer8XHXrooX3ei7q7u2snsK255ppx5ZVXxpJLLhl33XVXHHXUURHx79klZv38W3HFFeOiiy6KO+64ozazFsA8S2E+euCBB9I11lgj3WabbdI//OEPtf3jx49P99hjj3TUqFHpLrvskj777LO12y644IJ01KhR6YUXXpimaZpWKpXabd/61rfSyy67LP3Rj36UnnHGGQvseVA/DzzwQLrJJpukX/jCF/q8Trq7u9Ourq45PvaII45IR40alW6wwQbp//7v/6Z//vOf05NPPjndeOON06233jqdOHHi/G6fhcSJJ56Yjho1Kj300EPT5557rrZ//Pjx6W677ZaOGjUq3XXXXdP33nsvTdM0/d73vpeOGjUq3WOPPdLHHnvsA/Wuvvrq9NOf/nS62267pW+//fYCex7U15tvvplOmzatz77u7u60Wq3Wfv7rX/+a7rzzzumoUaPS/fbbL/373/+ednd3p2maprfccks6atSodNSoUekBBxyQfvWrX01HjRqVbrHFFuk///nPBfpcqI+BfKZNnjw5Pfnkk9NNNtkk3WSTTdLvfve76dixY9Pf//736Xe+85101KhR6Wc/+9n0xRdfXFBPgzrqeZ1cdNFF6ZprrpmefPLJ6auvvpqeddZZtfeeddddN91qq63S//3f/02ff/752nvUu+++m95yyy3pjjvuWHsvWnfdddMtt9wyHTNmTO13nHDCCemoUaPS0047Le3u7q69h9E43njjjXT33XdPR40a1edvtGq1Otf/7/PPPz9df/3103XXXTf93e9+l06fPr3P7b0/J712Gtu8HF/vueeefY6VDzjggHTUqFHpvffem6ZpmnZ2dqZp+u/XzdZbb50+8MAD6emnn54+88wzC/bJsMD1vH4OOeSQ9JJLLkk/+9nPpqNGjUpHjx5du0/v74Jm9eSTT9ZeZ4ccckj6yiuvLIi2WQj1vJa++93vpi+99FJtf++/05577rm0vb09TdM0/ctf/pJusMEG6aGHHlq7b7VaTZ977rl0o402SnfZZZd01KhR6Q9+8IO0o6NjgT4X6udPf/pTOmrUqPTiiy/+0I+99dZb/Z3PbN+L0jTt851Rb88991y64YYbpqNGjUqPPPLI2v45ff4BfBgCAMw3Dz30ULrmmmum2267bXrnnXfW9vf8kf/MM8+kG2+8cTpq1Kj09NNPr93+ox/9KF1rrbVqXwr0fNF5//33p6NGjUr//Oc/9/k9cxsEZtF2wQUXpGussUZ69dVX1/bN+mXiPffck1566aXpYYcdlv72t79N77///tptxxxzTO1AvGf5/Oc/b6BkMfLLX/4yHTVqVHr44YfXvhjq/WXAk08+ma677rrpqFGjaq+zJ598Mh09enQ6atSodJNNNkmvueaa9MEHH0yfe+659Kc//Wm6wQYbpJttttkHDuppXMcff3y66aabpjvvvHM6ZsyY2mdUzx9mvd+XHn744T4hgL/97W+1z6rf//736dprr52OGjUq3XDDDdN99tknffnllxf8E6IuPuxn2iWXXJI+/fTTaaVSSS+++OL0y1/+cp/Ps0022SQ96KCDfOm9GPrb3/5Wex08/vjjaZqm6cyZM9Pzzjsv/fa3v127beutt04POuig9JlnnkknT56cpmmaTp8+Pb3vvvvS3//+9+lDDz3UZ6BtzJgx6QYbbJBuu+226RtvvFGPp8YC8MADD6Trr79++v3vf7+2b9YvJidMmJA+/PDD6W9+85v0tttuS5944onabb1DAFdcccUHQgBpavC/0X2Y4+vf//73tcd97WtfSzfddNP09ddf71PvnHPOSdddd11/oy0mfvGLX9QGSf71r3+laZqmf/zjH9PNNtssHTVqVLrvvvvW7juvIYDRo0enr7766vxunYVMf+9FPXp/rr311lu1fd/4xjfS9dZbr/Z+0zPI/9Zbb6WbbLJJeuaZZ6bf/va3vR8tJnpeJ/vtt186atSo2vfX83Ic0/s+N954o7/zF2Pz+l50wAEHpN/97nfTNP2/8QwhAGB+MgcN88Xf/va3GD16dDQ3N8eee+4ZX/jCFyLi39e6KRQK0d3dHWuttVbssMMOMWbMmA9M7dfV1RU33nhjfPrTn44hQ4bEo48+Gueff36MHDkyVlxxxdr9UteTbGiVSiUefvjhSNO0ds2kJEmiWCxGtVqN9957L84+++y46aabatdBuv3222OZZZaJQw89NHbfffc44YQTYuONN44XXnghJkyYEGuuuWbstNNOpk1aTJxxxhlxySWXxAorrBDbbbdd7XIPaZrWLgmx3nrrxSabbBIPPPBAtLS0RETEOuusE4cffngMHz48/vznP8f//M//9Km71lprxSmnnNJnOi8a1xlnnBFXXHFFRERMmTIlfv7zn0fEv6f9X2mllWL33XePpZZaqvZ6+PSnPx3f//7345e//GXcd999kaZpHHjggbHhhhvG7rvvHhtssEG8//77scwyy8Syyy4bQ4cOrdtzY8EZyGfabbfdFh/5yEfi2GOPjW9961ux8847x9ixY6NarUZnZ2dsscUWsfLKK3sNLYY22WST2HfffeO3v/1tjBs3LtZdd90olUrx7W9/Ozo6OuLxxx+P//3f/40nn3wyXnvttXjiiSdijTXWiD322CP+67/+q8+lJ3r8+te/jquvvjpaWlri7LPP7nO9ShrLAw88EEmSxFprrRUR/54eeckll4yIiGq1GrfddluceeaZ8d5778X06dOjubk5Vlpppdhvv/1it912iwMOOCByuVycf/75cfzxx0eSJPHNb36zzxS3pktuXB/2+LrnUiJpmkahUIgpU6bEOeecEz/+8Y9jySWXjDFjxsTVV18da6+9diyzzDJ1e14sGMccc0z84Q9/iO222y4OOuig+NjHPhYREVtvvXXkcrk4+eST48EHH4xvfetbcckll9SmQ+5vCu2eywF8//vfj7///e9RKBQW8LOhnmb3XtTd3d3n/egHP/hBvPLKK/Gb3/wm8vl8vPrqq9Ha2hrFYjEi/u967Zdeemk0NTXFAQccEM3NzaZtX0z0vE6SJIlcLhfLLrtsRHy445gnn3wydtxxx1hvvfXinXfe8Xf+YubDvBfdc889se2228bkyZNj6aWXjq6urlhjjTVizJgx8bWvfS3Gjh0bzc3N8ctf/tJ7EJAJ7yTMFz0H0tVqNV544YV44YUX4pOf/GTtQy/i318AvPvuuxERMWLEiNr+//7v/46HH344xo4dG++++26stNJK8Ze//CUmT54cxx13XKy33nq1+/piqbHlcrnaAc9dd90VW265ZRSLxZg6dWrcfvvtceONN8bf//73yOfzsc4668RSSy0Vb7zxRrzyyitx2mmnxbLLLhtbbbVV7LTTTvV9ItTNlltuGRdeeGFMnDgx7rnnnlhhhRVirbXWiqampuju7o6mpqaYMWNGvPPOO9HU1FQbwG1qaor1118/TjvttPjMZz4T//jHP+KNN96Ij370o7HJJpvEZz/72Rg5cmSdnx0LypZbbhkXX3xxpGkaK620UmyxxRZx7733xvjx4+Nvf/tb3HLLLTFkyJD48pe/HKusskpsv/32sdlmm8Uvf/nLOProo+P++++PNE3j29/+dmy88cbxiU98ot5PiToYzGfaT37yk2htbY0tttgi9tlnnzo/E+otTdPI5XKx8cYbx5gxY2Ls2LGx7777xnLLLRfVajVaWlpi/fXXj0KhEB0dHbHqqqtGxL8HfR944IHYaKONYr311osf/vCHERHx9ttvxze+8Y2YMGFCLeC22mqr1fMpsoA899xzERG1wf9HHnkkxo0bVwu9LbfccrHsssvGlClT4pVXXolf/OIXMXTo0Nh2221j//33jzRN4/TTT4+WlhZfUi5GPuzxdc97UC6Xi6OOOioOPfTQuP766+Ppp5+OfD4f48ePj2WWWSZOOOGEWHrppev75Jjvtt9++3jrrbfi4IMPjo9//OO1z7QlllgivvjFL0ZEfOgQwOmnnx7Dhg2Lj370owv66VBHc3ov6vG9730vbr755thjjz1iyJAhUSwWY4UVVoh//OMf8a9//SuWW265KBQKceWVV8af//znWGeddaJarda+02TxUSwWI03TeOqpp2qvg7kd2+RyuXjhhRfi2GOPjcMOOyy++MUv1j7zWHx82Pei73znO7XjnXw+3ycE8M1vfjP++Mc/xpAhQ+L444+v0zMCGkkunfXUa8jI008/HbvvvntEROy4444xevToWHPNNWt/4E2cODH22muvWH755ePMM8+M5ZZbLrq6uqKpqSnuvvvuOP7442PixIkREbHCCivEgQceGHvssUdE/N8XnzS+m2++OY477rhIkiR22mmn+PSnPx033HBDjB8/PqZMmRIrrLBC/PSnP4111lknRowYEX/961/jd7/7Xdxxxx3x7W9/O4444ojaF1Esnnq/F+20007xzW9+M9Zcc83a7X/605/iBz/4Qeyxxx5xzDHHxJAhQ/p9f+nq6uoTYmLx8tRTT8Xee+8d1Wo1vve978VWW20VTU1N8cc//jFeeeWVuO2222pfTvbMVjN69Oh47rnn4r777otnn302vvCFL8TXv/71+MxnPuMzbDGVxWea9yJ6dHd3x3777RcPPvhg7L///nHooYfGkCFD4u23344TTjghbr/99thyyy3j3HPPjTfffDOuv/76uO666+Ldd9+NI488Mg444IBarcsvvzzee++92GuvvQygLAbuv//+OOigg6KzszO+/vWvx4477hi33npr3H333fHiiy9GRMT+++8fX/rSl2K11VaLhx9+OK6//vq49dZbY+edd47/+Z//iVKpFBERzzzzTKy99tr1fDrUwUCPr7u6uuKhhx6KE088sTb4tsYaa8SPfvSj2pngNL5yuVx7D5lVkiRx++23x8knnxzvvfdebL755nHJJZdERMzTgByLl1nfi772ta/FuuuuGxERRx11VIwdOzZ23333OOigg2L55ZePiIizzz47zj777Bg2bFhstNFGkSRJPPTQQ7HMMsvE5Zdfbpa/xUzP98s9s5N8/vOfj/POOy8iYo7fJfa8Hz388MMxevToOPjgg+PQQw9dkK2zEJmX96LddtstDj744Fh++eVrr7uedc9r7emnn47DDjsszjnnnNpMXQCDIQDAfPXUU0/VBu17fwB2dHTELrvsEm+++WYcffTRseuuu37gy+z33nsv7r///lhhhRVixIgRtTORDOYuXiZPnhynnnpq3HzzzZEkSS0dueKKK8YWW2wR3/zmN+PjH/94ny8Dfve738WJJ54Ym222WVx88cWRy+UMti3mer8X7bjjjvGNb3wj1l577bj33nvjgAMOiLXWWit+/OMfx8Ybb9zv43s+KnsfoLP46f06OuCAA+Lggw+uXTbiySefjHfffTeuvfbaePvtt2P8+PEREbUvNyuVSlSr1fjyl78cJ510krNKFlM+08hKTxDknnvuiSOOOCLWXHPNGDNmTLz//vtx3HHHxZ133hlbbLFFXHTRRX0e98wzz0SlUokNNtggIvoOphhYWXxMnz49fvWrX8WNN94YnZ2dMWzYsJg6dWo0NzfHhhtuGHvssUdsv/32fR7z5z//OY488shYffXV45prrokllliiz3uRv9EWP4M5vp42bVq8+OKLsdxyy8VSSy0Vra2tC7p9FmJCAHwYvd+Ldt111zjggAPirLPOiptvvjl23XXXOPTQQ+OjH/1onxDt8ccfH+PGjYv33nsvllxyyfjkJz8ZJ510krO3F2OPPvpofOtb34qOjo447LDD4qCDDoqI/o9veu878MAD48knn4zf/e53sfrqqy/wvll4zO296JBDDukz+N/7dTR+/PhYbrnlYvjw4dHZ2Vm7NAnAYAkAMN/1/gDcY489Yscdd4yf/vSn8a9//SsOPfTQ2HfffWPIkCF9BtVm9wWSgbfF03vvvRc33XRTXH755bHsssvWzqxdZZVVYtiwYbXXRc9B0j333BPf/va3Y9ddd40TTzyx3u2zkOj9XrTXXnvFqquuGieddFKsvvrqcdRRR8V//ud/1rlDFgW9k937779/jB49Oj7ykY/Ubu/o6Ig0TeP222+Pl19+Of74xz9GuVyO9vb2aG1tjauuusolABZzPtPI0muvvRb77rtvvP7663HIIYfEiy++GLfeemufwf9qtRpNTU1z/PKSxc+kSZPiyiuvjMsuuyxaW1ujpaUlDjzwwFh//fX7BK+7u7ujubk5Xnrppdhxxx3jE5/4RFx55ZWzPXuXxctAjq+99zAvhAD4MHq/F6288srx2muvxe677x6HHnpoLLvssrXj694hgOeeey4mTpwYq6yySnzkIx+J4cOH1/MpUGednZ1x/PHHx/XXXx/LL7987L///vHVr341IvrOBtl7+9JLL41f/epX8ZWvfCWOO+44YTbm+b2o97HQtddeG9dcc01ss802sd9++wn8A5kSAGCB6P0BuNRSS8WMGTPi0EMPjf/+7/+O5uZmXwIwT2bOnBnFYrHf10rv19BRRx0Vt9xyS5x66qnx5S9/WXCEmt7vRblcLlZaaaU45phj4vOf/3xECBkxb3q/jr797W/HN7/5zRgxYkREfPA19O6778b7778fY8eOjZ122smUktT4TCMr1113XRx77LFRKpWiXC7HZz/72bj44osjwiAJc/fuu+9GPp+P5ubmGDZsWG1/79mPIiKuuuqq+NnPflab4tbfb/RwfM38MmsIYMstt4wLLrjA64l+9b5k2yqrrBLHHHNMfO5zn4uImKcTjuC1116LQw45JJ5//vlYZZVVYs8994x999233/teeeWVcfbZZ0exWIzLLrssVl555QXcLQurub0XpWlaew+64YYb4rTTTospU6bEH//4R98XAZlzxMMCsd5668Xvf//7aG5ujilTpsQnP/nJ+MxnPlP7QtLBN/NiiSWWqL1Wuru7a/u7urpq+y+77LIYO3ZsbLzxxvGZz3wmIsIXBNT0vBf1zDqy4oor9vlDzWuFedHzOoqIOP/88+Oyyy6L9vb2iPi/y0RE/PuPu5EjR8aoUaPiyCOP9MccffhMIyvrrbdefOITn4hyuRwbb7yxwX8+lJEjR8aIESNqM5D01vN+87e//S3OO++8+MhHPhKbbbZZRPj7jf/j+Jr5pVgsxhe/+MU4+uijY9lll4377rvPNbaZrfXWWy/GjBkTzc3NMWHChLj99tvjmWeeiYi+70M+v5idlVdeOU477bRYffXV49VXX41f/vKXcdRRR8WTTz4Z77//fkydOjVeffXV+PGPfxwnn3xyNDU1xfnnn2/wnz7m9l7U8x50/fXXx2mnnRYdHR3xhz/8wfdFwHxhBgAWqKeeeir22muv6Orqil133TX22muvWGedderdFg1izJgxcc4550Qul4sxY8bExz72sXq3xELqqaeeij333DO6u7tj5513jn322SfWXnvterfFImbWmQBGjx5t6kgy4zOND+PnP/95XHnllbHpppvGBRdcEEOGDPEFNwMy69najzzySJx55pnx97//PY4//vjaZXBgVo6vmV+SJImxY8fGBRdcEGeccUastdZa9W6JhVjvv9F22mmn+OY3vxlrrrlmnbtiUfKvf/0rTj311Lj//vujo6MjllpqqYiIKBQKMXny5KhWq7HhhhvGiSeeGKuuumqdu2VhNet70T777FMbA/nDH/4QZ5xxRiRJEldeeWV88pOfrGerQAMTAGCBm9PBuOkB+bBmzpwZ5XI5fvWrX8Vtt90Ww4cPj/PPP981tpkrXwyQBSEAsuQzjQ+r59j51Vdfjf333z+SJImzzjor1ltvPVPc8qHN+rfYDTfcEOedd168/vrr8f3vfz9Gjx7d7/2gh+Nr5pckSaJarbrGNvPEexGDNWXKlHj44YfjoosuimnTpsUrr7wSI0aMiPXXXz+23nrr2GqrrWKZZZapd5ss5Hq/F+2yyy7xjW98I5577rk47bTTDP4DC4QAAHUx6wfgPvvsI8XNh/b222/Hb37zm7jjjjtiypQp8dnPfjZ+8pOfxH/8x3/UuzUWEb3fi3bdddfYc889Y911161zVyxqer+OvvOd78TXv/71GDFiRJ27YlHjM43BmD59ehx11FFxzz33xHbbbRennXZavVtiEZWmaVx++eVxxx13xN///vf46Ec/GocffnjstNNOEeHaycyd42tgYeC9iCzMmDEj8vl8vPvuu1EqlQz686H1fi/aZJNN4vnnn4/u7m6D/8AC4S936qLnOoHNzc1x/fXXx3nnnRfvv/9+vdtiEdPc3ByVSiVWX331+MlPfhKnnHKKgRI+lJ73okKhEH/4wx/i+uuvj87Oznq3xSKm92faueeeG1dffXWfa7rDvPCZxmC0trbGoYceGvl8Pu6444546aWX6t0Si6ipU6fGc889Fy+99FJ89atfjVNPPdXgPx+K42tgYeC9iCwsueSSUSwWY6WVVoqPfOQjEfHvsCTMq573opaWlvj73/8euVwurrrqKoP/wAJhBgDqqicFd/TRR9emlIQPY/r06RERUSqVIp/P17kbFlWPP/54HHjggXHFFVeYapsBe/zxx+OAAw6IK6+80uuIAfGZxmDMnDkzvvWtb8V2220XX//61+vdDouwyZMnR3t7e4wcObI23bZp//mwHF8DCwPvRcDC4NFHH43vfve7cemll8bqq69e73aAxYQAAHU3adKk2hRKvlgC6qWjoyNaWlrq3QaLOK8joJ6mTJkSSy21VEQ4WxuoP8dFwMLAexGwMEiSJIrFYr3bABYjAgAsNHxJCQAAgydUCwAAALD4EgAAAAAAAAAAgAbgdGsAAAAAAAAAaAACAAAAAAAAAADQAAQAAAAAAAAAAKABNNe7gcF677334qmnnoqnnnoqnn766Xj66adj8uTJERGx8847x8knn1zfBgEAAAAAAABgAVjkAwCbb755vVsAAAAAAAAAgLprqEsArLDCCrHFFlvUuw0AAAAAAAAAWOAW+RkADj744Fh33XVj3XXXjWWWWSZef/31+K//+q96twUAAAAAAAAAC9QiHwA47LDD6t0CAAAAAAAAANRdQ10CAAAAAAAAAAAWVwIAAAAAAAAAANAABAAAAAAAAAAAoAEIAAAAAAAAAABAA2iudwOLms9//vP1boFFWLFYjHHjxkVERFtbWyRJUueOWNR4DZEFryMGy2uILHgdMVheQ2TB64gseB0xWF5DZKH36wgGy3sRg3X33XfXuwUWEldddVVccMEFmdY88sgj4ytf+UqmNRuNAAAAAAAAADQIg7cMhBAJMD+sssoqmdf805/+JAAwFwIAAAAAAADQIAziAlBv1Wo1kiSJZ599NvPaSy21VOY1G40AAAAAAAAAAAAxefLkeOaZZ6JcLkeSJJEkSW27XC7Xlv5u69lXqVTmW39LLLHEfKvdKAQAAACAunKGEgAAAMDC4bDDDovXXnut3m3UNDU1RXNzczQ1NcXQoUNjv/32q3dLCz0BAAAAoK5co5SBcI1SAID+Ob5mIBxfAz222Wab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WLlyZWvgvVKpxMqVK6NcLkeappGmaWt7Teunn346KpVK7LPPPnHQQQdFqVSKJEmiVCqN2S4UDFlnyb8mAAAAAAB0CTNs0Q4zbAFN+Xw+dt1110nVqNVqUa1WY+7cufHTn/40fv3rX8evf/3rSfeWJEl84QtfiF122WXStbqZAAAAANBRfmQCAIDs+H4NwGRcc801cfrpp6/3+3K5XOTz+ajVatFoNKags4g0TePss8+OCy+8cErqdwsBAAAAoKPcoUQ73KEEAAAA2bvgggvael+j0YhqtTrh8b6+vigUClEoFKJYLLam/W8+YmD04wbq9fqEdY477ri2+tuUCAAAAAAAAAAAEKeeemqcdtppsWzZsjED82sa3F8X2267bSRJEkmSRKlUaq1Hb49ejz4++tjAwEBGV9q9BAAAAAAAAKBLmGGLdphhC2jaeeed4+KLL16v9zQajRgZGYk0TaNcLrfWl112WSxYsCAiIu69995M+jvwwAPjU5/6VCa1upUAAAAAAAAAdAmDuABsaLlcrnXX/uabb97a/4lPfCJ22223eOCBB2JoaKi1PPXUU7F8+fK2PmvRokUZdd29BAAAAAAAAAAAyNQPfvCDOO+88zKp1dfXF729vXHooYdmUq+bCQAAAAAAAAAAkKknnngiIiK23XbbeO5znxulUimSJIlSqTRme/R69PHmvr6+vsjn8x2+mo2HAAAAAAAAAAAAU+KVr3xlHHvssZ1uY5MhAAAAAAAAAABARERUq9VI0zTK5fKE64mOjd5+8MEHO30pmyQBAAAAoKPmz5/f6RYAAAAAiIhTTz01FixYkGnN//7v/45cLheFQiEKhUIUi8XW9tpeF4vFiIioVCoREfHCF77Q4wDWYlIBgJUrV8aPfvSjmD9/ftxxxx2xdOnSKBaLsfXWW8eee+4Zb37zm2PPPfdcY40lS5bEvHnz4n/+53/ioYceikajEVtvvXXsu+++8Y53vCN23nnntfZw2223xZ/+9Ke45ZZb4pZbbon7778/Go1GRETccccdk7lEAABgig0ODkaapp1ug41MkiTCIwAAAJCxoaGhzGs+/fTTcckll2RSa6+99oqzzjork1rdqu0AwEMPPRT/+q//GnfdddeY/ZVKJe67776477774oorrogjjzwyPvnJT0Yul1utxqWXXhqnnXZaK7HRdP/998f9998fl112WXzsYx+Ld77znRP28alPfSquuOKKdi8DAAAAAAAAYFw/+tGPYuHChXHrrbfGnXfeGZVKJc4888x405veNO75y5Yti7lz58bPf/7zePzxx2PrrbeO17zmNfH+978/ZsyYsYG7X39f+MIXYsmSJdHT0xO5XC6q1WpUq9WoVCrjbq/p2Pe+971Yvnx5pv1tv/32mdabCuv6N1OpVOLaa6+Na6+9Nm655ZZ45JFHIiLiec97Xhx22GHx1re+ta3ZDtoKAFQqlTGD/89//vPj6KOPjp122imWL18eCxcujIsuuihWrFgR8+bNi6233jr+5V/+ZUyNn/70p/Gf//mfERExc+bMOProo2OfffaJ3t7eWLx4cVxwwQVx//33x+mnnx5bbLFFHHLIIeP20rzTPyJixowZ8aIXvSjuvffeePzxx9u5NAAAAAAAAICIiPjSl74UDz30UMyePTu23nrreOihhyY8d8WKFfHOd74zFi9eHK94xSvida97XSxevDguvPDCuOmmm+Lb3/529PX1bcDu119PT0/ssMMOmdQaGhqKK664Irbaaqt4znOeE6VSKZIkGbNedd9Ex5MkaT0OYLpb17+ZBx54II4//vjo7++Pl7/85XHQQQfF8PBwLFiwID796U/Hr371q/ja17427o32a9JWAOCaa65pDf7vscce8e1vf3tM+mC//faLgw46KN72trdFpVKJ888/P4455pgoFP72ceVyOc4444yIiOjv74/vfOc78fd///et9++2225xyCGHxBFHHBF33nlnnHHGGXHAAQeMm4rZf//9Y++9947ddtstnvvc50ZPT08ceeSRAgAAAAAAAADApJx++umxww47xHbbbRfnnXdefOELX5jw3AsuuCAWL14c73nPe+LDH/5wa//ZZ58d559/fnzzm9+Mf/3Xf90QbU8rr3nNa+LYY4/tdBsbzLr+zQwMDMR//ud/xmGHHRb9/f2t/StWrIgjjzwyFixYEPPnz4/Xvva16/X5Pe00ffPNN7e2/+Vf/mXcqQd23XXXOPDAAyMi4plnnom77767dey6666LJ598MiIi3vWud40Z/G8aGBiIj3/84xER8cQTT8QPf/jDcXs55JBD4k1velPsvPPO0dPT1uUAAAAAAAAArGbfffeN7bbbbq3nNRqN+MEPfhD9/f3xvve9b8yx973vfdHf3x8/+MEPpqpNppF1/Zv5u7/7u3jHO94xZvA/4m830B999NEREXHTTTet9+e3NWJeqVRa23PmzJnwvNHHRr/n1ltvbW3vv//+E75/7733bk2DcdVVV7XTKgAAAAAAAMCUuu++++Kxxx6LPffcc9wB3T333DOWLFkSDz/8cIc6XLsHH3wwzj///DjttNPi/PPPjwcffDCTuo1GY8xj3Vm75sz6492Iv9b3tvOBO+20U2t7yZIlsfPOO4973pIlSyIiIpfLxY477tjav3Tp0tb2VlttNXFzhULMmjUrHnvssbj55pujWq22LhYAAAAAAABgOrj//vsjIsaMiY624447xvXXXx/33XdfbLPNNhuws3Vz5ZVXxtlnnz1m3/e+97048cQTY3BwcFK1v/Od78T3vve9KJVKrSVJkkiSZMx2sViMYrEYhUIhCoXCmO1ly5bF3XffHaVSKbbbbrt47WtfG9tvv/2k+prOLr/88oiIeMUrXrHe721rNP11r3tdfPGLX4xly5bF+eefHwcccMBq6YPbbrstfvnLX0ZExKGHHhoDAwOtY6NTL8PDwxN+TqPRiGXLlkXE32YQuP/+++O5z31uOy0DAADT1Pz58zvdAgAAAMCkNMc8R4+Jjtbc3xz7nE4efPDBOPvss6Ner6927HOf+1xcffXVUSqV1qlWo9GIarUa1Wo1Fi5c2Npfr9dj+fLlsXz58kn329PTk1k4YTq69NJL41e/+lXss88+ccABB6z3+9sKAGyxxRbx+c9/Pj70oQ/FokWL4vDDD493v/vdseOOO8aKFSti0aJFceGFF0alUokXvehF8bGPfWzM+0cP4t90002x6667jvs5t912W6xYsaL1+uGHHxYAAACALjM4OBhpmna6DTYySZIIjwAAjMP3a9rh+zVs2q688so1Hh89kD8dNIMKZ511Vuy2226x3Xbbdbij7CxYsCBOO+202G677eKss85qq0bb8+m/6lWvissvvzwuuuiiuOyyy+KjH/3omONbbbVVfOADH4i3vOUtqyVC9t9//ygUClGtVuOiiy6KN7zhDbHFFluMOader8c555wzZl8WiRAAAAAAAOhWBnEBOmPmzJkRMfEd/s39E80Q0EmPPPJIp1to289+9rN4z3ve0+k2MnHdddfF8ccfH1tuuWV861vfiq233rqtOm0HAFauXBk/+tGP4pprrolGo7Ha8SeeeCJ+/OMfx/bbbx+vetWrxhzbZptt4m1ve1tccskl8eijj8YRRxwRJ554Yuyzzz5RLBZj8eLFMXfu3Lj++uujWCxGpVKJiJgWqcXmYw1gsnwRZ7L8DZEFf0dMlr8hsuDviMnyN0QW/B2RBX9HTJa/IWA68N8iaM8OO+wQERH33XffuMeb+3fccccN09B6ePaznz3hsZ6ennjb297WsUH20047LX75y1+O+3iCiI07vDDaL3/5y/j3f//3mD17dlx88cUxZ86ctmu1FQBYsWJFvOc974nf//73kc/n49hjj403velNMWfOnFi5cmX88Y9/jK9+9auxcOHCOO644+KjH/1oHH300WNqfPSjH40lS5bEddddF/fdd18cd9xxq33OrrvuGrvttlt897vfjYiIGTNmtNMuAAAAAAAAwJTZcccdY+utt45FixbFihUror+/v3Ws+Qj17bffPrbZZpsOdjm+97znPdP2LvqTTz45Tj755E63MaWag/+zZs2Kiy++uBUmaVdPO2+aO3du/P73v4+IiDPOOCNOPPHEeO5znxu9vb0xMDAQ++23X1x88cXxspe9LBqNRnz+85+P22+/fUyN3t7e+PrXvx6nn356vPCFL4xcLtc6tuWWW8Z73/ve+M53vjNmdoFZs2a10y4AAAAAAADAlMnlcvHmN785VqxYEeeee+6YY+eee26sWLEi3vKWt3SoO6ar6667bszgfxYzROQa483fvwaNRiP22WefWLp0aey4445x1VVXTXjuwoUL4+1vf3tERLz73e+OT3ziExOeu2zZsnjyyScjSZJ41rOeFT09f8smHHXUUfHb3/42IiJ++9vfxhZbbLHWHo888sj43e9+FxERd9xxxzpfGwAAAAAAAEDTD37wg1i4cGFERNx5553x5z//Ofbcc8/WXdovfelL481vfnNE/O1O/yOOOCJuv/32eMUrXhG77LJL3HbbbXH99dfHbrvtFpdcckkkSdKxa2HDWNe/mbvvvjve+MY3xsqVK+N1r3td7LTTTqvV2m677eJNb3rTen3+ej8C4IknnoilS5dGRMQuu+yyxnN33XXX1vY999yzxnMHBgZiYGBgzL5arRaLFy+OiIg5c+as0+A/AAAAAAAAQBYWLlwYP/zhD8fsW7RoUSxatKj1uhkA6O/vj0suuSTmzp0bP//5z+PGG2+MZz3rWXHMMcfEcccdZ/B/E7GufzNPPPFErFy5MiIifvrTn45ba++99576AEA+n29t12q1NZ5bqVT+3wcV1vuj4sYbb2yFDQ455JD1fj8AAAAAAABAuz772c/GZz/72XU+f+bMmfGJT3xijTOj093W9W/mZS972ZTMZt+zvm/YfPPNW3fq33zzzVGtVic896abbmptb7/99uv1OY1GI+bOnRsREcVisZWcAQAAAAAAAABWt94BgJ6enjjwwAMjIuKxxx6Lr3/96+Oe9/TTT8fZZ5/det18T9PQ0FBrSoNV1Wq1OPXUU1vTIPzLv/xLzJkzZ31bBQAAAAAAAIBNxvrPyx8R73vf++Kaa66Jcrkcc+fOjVtvvTUOO+ywmDNnToyMjMQf//jH+Na3vhV//etfIyLi5S9/ebziFa8YU+PGG2+M0047LQ455JDYe++9Y5tttomRkZG444474vvf/34sXrw4IiL233//eO973zthL48//nj8+te/Xm1f0xVXXDHm2Etf+tLYYYcd2rlsAAAAAAAAAJi2co1Go9HOG//nf/4nPvjBD8bQ0NAaz9tnn33iy1/+csyaNWvM/vnz58cHPvCBiRvL5eJNb3pTnHLKKdHb2zvheTfeeGO8613vWue+zzzzzHjTm960zucDAAAAAAAAwMagrRkAIiL23XffuPLKK+Oyyy6LX/3qV/GXv/wlhoeHI5/Px1ZbbRW77bZbHHroofGqV70qcrncau/fa6+94iMf+UjccMMNcc8998STTz4ZuVwutt5663jZy14W//zP/xy77777pC4OAAAAAAAAADYVbc8AAAAAAAAAAABMHz2dbgAAAAAAAAAAmDwBAAAAAAAAAADoAgIAAAAAAAAAANAFBAAAAAAAAAAAoAsIAAAAAAAAAABAFxAAAAAAAAAAAIAuIAAAAAAAAAAAAF1AAAAAAAAAAAAAuoAAAAAAAAAAAAB0AQEAAAAAAAAAAOgCAgAAAAAAAAAA0AUEAAAAAAAAAACgCwgAAAAAAAAAAEAXEAAAAAAAAAAAgC4gAAAAAAAAAAAAXeD/B9joWzkA8tCBAAAAAElFTkSuQmCC\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# -----------------------------\n",
        "# Step 03 (Polished) - Smart Cleaning + Pretty Before/After Table\n",
        "# -----------------------------\n",
        "\n",
        "import warnings\n",
        "warnings.filterwarnings('ignore')   # hide pandas FutureWarnings for clean output\n",
        "\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "from IPython.display import display, HTML\n",
        "\n",
        "# display options for nicer notebook tables\n",
        "pd.set_option('display.max_columns', None)\n",
        "pd.set_option('display.width', 200)\n",
        "\n",
        "# ---- Load raw data (ensure path matches your Colab file) ----\n",
        "raw_df = pd.read_csv(\"/content/train.csv\")   # raw original\n",
        "print(\"✅ Raw train.csv loaded. Rows,cols:\", raw_df.shape, \"\\n\")\n",
        "\n",
        "# ---- 1) Missing values BEFORE cleaning ----\n",
        "def missing_table(df):\n",
        "    miss = df.isnull().sum()\n",
        "    miss = miss[miss > 0]\n",
        "    miss_pct = (miss / len(df) * 100).round(2)\n",
        "    return pd.DataFrame({\n",
        "        'Missing Values': miss,\n",
        "        'Percentage (%)': miss_pct\n",
        "    })\n",
        "\n",
        "missing_before = missing_table(raw_df)\n",
        "\n",
        "print(\"📌 Missing Values - BEFORE Cleaning\")\n",
        "if missing_before.empty:\n",
        "    print(\"✅ No missing values detected in the raw dataset.\\n\")\n",
        "else:\n",
        "    # display styled table\n",
        "    display(missing_before.style.background_gradient(subset=['Percentage (%)'], cmap='Reds').set_caption(\"Missing values (before cleaning)\"))\n",
        "\n",
        "# ---- 2) Make a working copy and perform smart cleaning ----\n",
        "df = raw_df.copy()\n",
        "\n",
        "# 2a. Fill Age using median by Pclass & Sex (smart)\n",
        "if 'Age' in df.columns:\n",
        "    df['Age'] = df.groupby(['Pclass', 'Sex'])['Age'].transform(lambda x: x.fillna(x.median()))\n",
        "    # final fallback if any remain (rare)\n",
        "    df['Age'] = df['Age'].fillna(df['Age'].median())\n",
        "\n",
        "# 2b. Fill Embarked with mode\n",
        "if 'Embarked' in df.columns:\n",
        "    df['Embarked'] = df['Embarked'].fillna(df['Embarked'].mode()[0])\n",
        "\n",
        "# 2c. Fill Fare with median (if any)\n",
        "if 'Fare' in df.columns:\n",
        "    df['Fare'] = df['Fare'].fillna(df['Fare'].median())\n",
        "\n",
        "# 2d. Cabin handling: add Cabin_Known then drop or fill depending on missing %\n",
        "if 'Cabin' in df.columns:\n",
        "    df['Cabin_Known'] = df['Cabin'].notnull().astype(int)\n",
        "    cabin_missing_pct = df['Cabin'].isnull().mean()\n",
        "    if cabin_missing_pct > 0.75:\n",
        "        # too many missing values — drop the column, keep Cabin_Known if useful\n",
        "        df.drop(columns=['Cabin'], inplace=True)\n",
        "        print(f\"ℹ️ 'Cabin' dropped (missing {cabin_missing_pct:.1%} of values). Keeping 'Cabin_Known'.\")\n",
        "    else:\n",
        "        # fill remaining cabins with 'Unknown'\n",
        "        df['Cabin'] = df['Cabin'].fillna('Unknown')\n",
        "\n",
        "# 2e. Convert some columns to categorical (clean display & later analysis)\n",
        "for c in ['Pclass', 'Sex', 'Embarked']:\n",
        "    if c in df.columns:\n",
        "        df[c] = df[c].astype('category')\n",
        "\n",
        "# 2f. Remove duplicate rows only if they exist (safe)\n",
        "dup_count = df.duplicated(subset=['Name', 'Ticket', 'Fare']).sum()\n",
        "if dup_count > 0:\n",
        "    df.drop_duplicates(subset=['Name', 'Ticket', 'Fare'], inplace=True)\n",
        "    print(f\"ℹ️ Dropped {dup_count} duplicate rows based on Name/Ticket/Fare.\")\n",
        "\n",
        "# ---- 3) Missing values AFTER cleaning ----\n",
        "missing_after = missing_table(df)\n",
        "\n",
        "print(\"\\n📌 Missing Values - AFTER Cleaning\")\n",
        "if missing_after.empty:\n",
        "    print(\"✅ Missing values handled successfully!\\n\")\n",
        "else:\n",
        "    display(missing_after.style.background_gradient(subset=['Percentage (%)'], cmap='Reds').set_caption(\"Missing values (after cleaning)\"))\n",
        "\n",
        "# ---- 4) Combined Before vs After table for portfolio (nice flattened view) ----\n",
        "# Build combined DF even if before/after are empty, to keep consistent output\n",
        "combined = pd.DataFrame(index=sorted(set(list(missing_before.index) + list(missing_after.index))))\n",
        "\n",
        "combined['Before Missing Values'] = missing_before['Missing Values'] if not missing_before.empty else 0\n",
        "combined['Before %'] = missing_before['Percentage (%)'] if not missing_before.empty else 0.0\n",
        "combined['After Missing Values'] = missing_after['Missing Values'] if not missing_after.empty else 0\n",
        "combined['After %'] = missing_after['Percentage (%)'] if not missing_after.empty else 0.0\n",
        "\n",
        "# fill NaNs with zeros for neat display\n",
        "combined.fillna(0, inplace=True)\n",
        "\n",
        "if not combined.empty:\n",
        "    display(combined.style.format({'Before %': '{:.2f}%', 'After %': '{:.2f}%'}).\n",
        "            background_gradient(subset=['Before %','After %'], cmap='Reds').\n",
        "            set_caption(\"Missing Values: Before vs After Cleaning\"))\n",
        "\n",
        "# ---- 5) Visualize missingness (before raw) - bar plot (only if there was missingness) ----\n",
        "if not missing_before.empty:\n",
        "    plt.figure(figsize=(8,4))\n",
        "    sns.barplot(x=missing_before['Missing Values'].values, y=missing_before.index, palette='Reds_r')\n",
        "    plt.title('Missing value counts (before cleaning)')\n",
        "    plt.xlabel('Missing count')\n",
        "    plt.ylabel('')\n",
        "    plt.show()\n",
        "else:\n",
        "    print(\"ℹ️ No missing values to visualize (raw data had none).\")\n",
        "\n",
        "# ---- 6) Quick preview of cleaned dataframe for portfolio ----\n",
        "print(\"\\n🔎 Cleaned Data Preview (first 8 rows):\")\n",
        "# show a nicely formatted preview\n",
        "display(df.head(8).style.set_table_styles([{'selector':'th','props':[('font-size','12px')]}]))\n",
        "\n",
        "# ---- 7) Save cleaned CSV for further steps ----\n",
        "df.to_csv('/content/titanic_cleaned_portfolio.csv', index=False)\n",
        "print(\"\\n💾 Cleaned dataset saved as /content/titanic_cleaned_portfolio.csv\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "Z3nz1Voq3b5M",
        "outputId": "97143f0f-d639-4171-b67e-61f17db745bd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "✅ Raw train.csv loaded. Rows,cols: (891, 12) \n",
            "\n",
            "📌 Missing Values - BEFORE Cleaning\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7fa290200510>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_e7121_row0_col1 {\n",
              "  background-color: #fcb99f;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_e7121_row1_col1 {\n",
              "  background-color: #67000d;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_e7121_row2_col1 {\n",
              "  background-color: #fff5f0;\n",
              "  color: #000000;\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_e7121\" class=\"dataframe\">\n",
              "  <caption>Missing values (before cleaning)</caption>\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_e7121_level0_col0\" class=\"col_heading level0 col0\" >Missing Values</th>\n",
              "      <th id=\"T_e7121_level0_col1\" class=\"col_heading level0 col1\" >Percentage (%)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_e7121_level0_row0\" class=\"row_heading level0 row0\" >Age</th>\n",
              "      <td id=\"T_e7121_row0_col0\" class=\"data row0 col0\" >177</td>\n",
              "      <td id=\"T_e7121_row0_col1\" class=\"data row0 col1\" >19.870000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_e7121_level0_row1\" class=\"row_heading level0 row1\" >Cabin</th>\n",
              "      <td id=\"T_e7121_row1_col0\" class=\"data row1 col0\" >687</td>\n",
              "      <td id=\"T_e7121_row1_col1\" class=\"data row1 col1\" >77.100000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_e7121_level0_row2\" class=\"row_heading level0 row2\" >Embarked</th>\n",
              "      <td id=\"T_e7121_row2_col0\" class=\"data row2 col0\" >2</td>\n",
              "      <td id=\"T_e7121_row2_col1\" class=\"data row2 col1\" >0.220000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "ℹ️ 'Cabin' dropped (missing 77.1% of values). Keeping 'Cabin_Known'.\n",
            "\n",
            "📌 Missing Values - AFTER Cleaning\n",
            "✅ Missing values handled successfully!\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7fa285546a90>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_97542_row0_col1 {\n",
              "  background-color: #fcb99f;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_97542_row0_col3, #T_97542_row1_col3, #T_97542_row2_col1, #T_97542_row2_col3 {\n",
              "  background-color: #fff5f0;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_97542_row1_col1 {\n",
              "  background-color: #67000d;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_97542\" class=\"dataframe\">\n",
              "  <caption>Missing Values: Before vs After Cleaning</caption>\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_97542_level0_col0\" class=\"col_heading level0 col0\" >Before Missing Values</th>\n",
              "      <th id=\"T_97542_level0_col1\" class=\"col_heading level0 col1\" >Before %</th>\n",
              "      <th id=\"T_97542_level0_col2\" class=\"col_heading level0 col2\" >After Missing Values</th>\n",
              "      <th id=\"T_97542_level0_col3\" class=\"col_heading level0 col3\" >After %</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_97542_level0_row0\" class=\"row_heading level0 row0\" >Age</th>\n",
              "      <td id=\"T_97542_row0_col0\" class=\"data row0 col0\" >177</td>\n",
              "      <td id=\"T_97542_row0_col1\" class=\"data row0 col1\" >19.87%</td>\n",
              "      <td id=\"T_97542_row0_col2\" class=\"data row0 col2\" >0</td>\n",
              "      <td id=\"T_97542_row0_col3\" class=\"data row0 col3\" >0.00%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_97542_level0_row1\" class=\"row_heading level0 row1\" >Cabin</th>\n",
              "      <td id=\"T_97542_row1_col0\" class=\"data row1 col0\" >687</td>\n",
              "      <td id=\"T_97542_row1_col1\" class=\"data row1 col1\" >77.10%</td>\n",
              "      <td id=\"T_97542_row1_col2\" class=\"data row1 col2\" >0</td>\n",
              "      <td id=\"T_97542_row1_col3\" class=\"data row1 col3\" >0.00%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_97542_level0_row2\" class=\"row_heading level0 row2\" >Embarked</th>\n",
              "      <td id=\"T_97542_row2_col0\" class=\"data row2 col0\" >2</td>\n",
              "      <td id=\"T_97542_row2_col1\" class=\"data row2 col1\" >0.22%</td>\n",
              "      <td id=\"T_97542_row2_col2\" class=\"data row2 col2\" >0</td>\n",
              "      <td id=\"T_97542_row2_col3\" class=\"data row2 col3\" >0.00%</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "🔎 Cleaned Data Preview (first 8 rows):\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7fa28c57e4d0>"
            ],
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_cfc81 th {\n",
              "  font-size: 12px;\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_cfc81\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th id=\"T_cfc81_level0_col0\" class=\"col_heading level0 col0\" >PassengerId</th>\n",
              "      <th id=\"T_cfc81_level0_col1\" class=\"col_heading level0 col1\" >Survived</th>\n",
              "      <th id=\"T_cfc81_level0_col2\" class=\"col_heading level0 col2\" >Pclass</th>\n",
              "      <th id=\"T_cfc81_level0_col3\" class=\"col_heading level0 col3\" >Name</th>\n",
              "      <th id=\"T_cfc81_level0_col4\" class=\"col_heading level0 col4\" >Sex</th>\n",
              "      <th id=\"T_cfc81_level0_col5\" class=\"col_heading level0 col5\" >Age</th>\n",
              "      <th id=\"T_cfc81_level0_col6\" class=\"col_heading level0 col6\" >SibSp</th>\n",
              "      <th id=\"T_cfc81_level0_col7\" class=\"col_heading level0 col7\" >Parch</th>\n",
              "      <th id=\"T_cfc81_level0_col8\" class=\"col_heading level0 col8\" >Ticket</th>\n",
              "      <th id=\"T_cfc81_level0_col9\" class=\"col_heading level0 col9\" >Fare</th>\n",
              "      <th id=\"T_cfc81_level0_col10\" class=\"col_heading level0 col10\" >Embarked</th>\n",
              "      <th id=\"T_cfc81_level0_col11\" class=\"col_heading level0 col11\" >Cabin_Known</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_cfc81_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
              "      <td id=\"T_cfc81_row0_col0\" class=\"data row0 col0\" >1</td>\n",
              "      <td id=\"T_cfc81_row0_col1\" class=\"data row0 col1\" >0</td>\n",
              "      <td id=\"T_cfc81_row0_col2\" class=\"data row0 col2\" >3</td>\n",
              "      <td id=\"T_cfc81_row0_col3\" class=\"data row0 col3\" >Braund, Mr. Owen Harris</td>\n",
              "      <td id=\"T_cfc81_row0_col4\" class=\"data row0 col4\" >male</td>\n",
              "      <td id=\"T_cfc81_row0_col5\" class=\"data row0 col5\" >22.000000</td>\n",
              "      <td id=\"T_cfc81_row0_col6\" class=\"data row0 col6\" >1</td>\n",
              "      <td id=\"T_cfc81_row0_col7\" class=\"data row0 col7\" >0</td>\n",
              "      <td id=\"T_cfc81_row0_col8\" class=\"data row0 col8\" >A/5 21171</td>\n",
              "      <td id=\"T_cfc81_row0_col9\" class=\"data row0 col9\" >7.250000</td>\n",
              "      <td id=\"T_cfc81_row0_col10\" class=\"data row0 col10\" >S</td>\n",
              "      <td id=\"T_cfc81_row0_col11\" class=\"data row0 col11\" >0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_cfc81_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n",
              "      <td id=\"T_cfc81_row1_col0\" class=\"data row1 col0\" >2</td>\n",
              "      <td id=\"T_cfc81_row1_col1\" class=\"data row1 col1\" >1</td>\n",
              "      <td id=\"T_cfc81_row1_col2\" class=\"data row1 col2\" >1</td>\n",
              "      <td id=\"T_cfc81_row1_col3\" class=\"data row1 col3\" >Cumings, Mrs. John Bradley (Florence Briggs Thayer)</td>\n",
              "      <td id=\"T_cfc81_row1_col4\" class=\"data row1 col4\" >female</td>\n",
              "      <td id=\"T_cfc81_row1_col5\" class=\"data row1 col5\" >38.000000</td>\n",
              "      <td id=\"T_cfc81_row1_col6\" class=\"data row1 col6\" >1</td>\n",
              "      <td id=\"T_cfc81_row1_col7\" class=\"data row1 col7\" >0</td>\n",
              "      <td id=\"T_cfc81_row1_col8\" class=\"data row1 col8\" >PC 17599</td>\n",
              "      <td id=\"T_cfc81_row1_col9\" class=\"data row1 col9\" >71.283300</td>\n",
              "      <td id=\"T_cfc81_row1_col10\" class=\"data row1 col10\" >C</td>\n",
              "      <td id=\"T_cfc81_row1_col11\" class=\"data row1 col11\" >1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_cfc81_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n",
              "      <td id=\"T_cfc81_row2_col0\" class=\"data row2 col0\" >3</td>\n",
              "      <td id=\"T_cfc81_row2_col1\" class=\"data row2 col1\" >1</td>\n",
              "      <td id=\"T_cfc81_row2_col2\" class=\"data row2 col2\" >3</td>\n",
              "      <td id=\"T_cfc81_row2_col3\" class=\"data row2 col3\" >Heikkinen, Miss. Laina</td>\n",
              "      <td id=\"T_cfc81_row2_col4\" class=\"data row2 col4\" >female</td>\n",
              "      <td id=\"T_cfc81_row2_col5\" class=\"data row2 col5\" >26.000000</td>\n",
              "      <td id=\"T_cfc81_row2_col6\" class=\"data row2 col6\" >0</td>\n",
              "      <td id=\"T_cfc81_row2_col7\" class=\"data row2 col7\" >0</td>\n",
              "      <td id=\"T_cfc81_row2_col8\" class=\"data row2 col8\" >STON/O2. 3101282</td>\n",
              "      <td id=\"T_cfc81_row2_col9\" class=\"data row2 col9\" >7.925000</td>\n",
              "      <td id=\"T_cfc81_row2_col10\" class=\"data row2 col10\" >S</td>\n",
              "      <td id=\"T_cfc81_row2_col11\" class=\"data row2 col11\" >0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_cfc81_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n",
              "      <td id=\"T_cfc81_row3_col0\" class=\"data row3 col0\" >4</td>\n",
              "      <td id=\"T_cfc81_row3_col1\" class=\"data row3 col1\" >1</td>\n",
              "      <td id=\"T_cfc81_row3_col2\" class=\"data row3 col2\" >1</td>\n",
              "      <td id=\"T_cfc81_row3_col3\" class=\"data row3 col3\" >Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
              "      <td id=\"T_cfc81_row3_col4\" class=\"data row3 col4\" >female</td>\n",
              "      <td id=\"T_cfc81_row3_col5\" class=\"data row3 col5\" >35.000000</td>\n",
              "      <td id=\"T_cfc81_row3_col6\" class=\"data row3 col6\" >1</td>\n",
              "      <td id=\"T_cfc81_row3_col7\" class=\"data row3 col7\" >0</td>\n",
              "      <td id=\"T_cfc81_row3_col8\" class=\"data row3 col8\" >113803</td>\n",
              "      <td id=\"T_cfc81_row3_col9\" class=\"data row3 col9\" >53.100000</td>\n",
              "      <td id=\"T_cfc81_row3_col10\" class=\"data row3 col10\" >S</td>\n",
              "      <td id=\"T_cfc81_row3_col11\" class=\"data row3 col11\" >1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_cfc81_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n",
              "      <td id=\"T_cfc81_row4_col0\" class=\"data row4 col0\" >5</td>\n",
              "      <td id=\"T_cfc81_row4_col1\" class=\"data row4 col1\" >0</td>\n",
              "      <td id=\"T_cfc81_row4_col2\" class=\"data row4 col2\" >3</td>\n",
              "      <td id=\"T_cfc81_row4_col3\" class=\"data row4 col3\" >Allen, Mr. William Henry</td>\n",
              "      <td id=\"T_cfc81_row4_col4\" class=\"data row4 col4\" >male</td>\n",
              "      <td id=\"T_cfc81_row4_col5\" class=\"data row4 col5\" >35.000000</td>\n",
              "      <td id=\"T_cfc81_row4_col6\" class=\"data row4 col6\" >0</td>\n",
              "      <td id=\"T_cfc81_row4_col7\" class=\"data row4 col7\" >0</td>\n",
              "      <td id=\"T_cfc81_row4_col8\" class=\"data row4 col8\" >373450</td>\n",
              "      <td id=\"T_cfc81_row4_col9\" class=\"data row4 col9\" >8.050000</td>\n",
              "      <td id=\"T_cfc81_row4_col10\" class=\"data row4 col10\" >S</td>\n",
              "      <td id=\"T_cfc81_row4_col11\" class=\"data row4 col11\" >0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_cfc81_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n",
              "      <td id=\"T_cfc81_row5_col0\" class=\"data row5 col0\" >6</td>\n",
              "      <td id=\"T_cfc81_row5_col1\" class=\"data row5 col1\" >0</td>\n",
              "      <td id=\"T_cfc81_row5_col2\" class=\"data row5 col2\" >3</td>\n",
              "      <td id=\"T_cfc81_row5_col3\" class=\"data row5 col3\" >Moran, Mr. James</td>\n",
              "      <td id=\"T_cfc81_row5_col4\" class=\"data row5 col4\" >male</td>\n",
              "      <td id=\"T_cfc81_row5_col5\" class=\"data row5 col5\" >25.000000</td>\n",
              "      <td id=\"T_cfc81_row5_col6\" class=\"data row5 col6\" >0</td>\n",
              "      <td id=\"T_cfc81_row5_col7\" class=\"data row5 col7\" >0</td>\n",
              "      <td id=\"T_cfc81_row5_col8\" class=\"data row5 col8\" >330877</td>\n",
              "      <td id=\"T_cfc81_row5_col9\" class=\"data row5 col9\" >8.458300</td>\n",
              "      <td id=\"T_cfc81_row5_col10\" class=\"data row5 col10\" >Q</td>\n",
              "      <td id=\"T_cfc81_row5_col11\" class=\"data row5 col11\" >0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_cfc81_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n",
              "      <td id=\"T_cfc81_row6_col0\" class=\"data row6 col0\" >7</td>\n",
              "      <td id=\"T_cfc81_row6_col1\" class=\"data row6 col1\" >0</td>\n",
              "      <td id=\"T_cfc81_row6_col2\" class=\"data row6 col2\" >1</td>\n",
              "      <td id=\"T_cfc81_row6_col3\" class=\"data row6 col3\" >McCarthy, Mr. Timothy J</td>\n",
              "      <td id=\"T_cfc81_row6_col4\" class=\"data row6 col4\" >male</td>\n",
              "      <td id=\"T_cfc81_row6_col5\" class=\"data row6 col5\" >54.000000</td>\n",
              "      <td id=\"T_cfc81_row6_col6\" class=\"data row6 col6\" >0</td>\n",
              "      <td id=\"T_cfc81_row6_col7\" class=\"data row6 col7\" >0</td>\n",
              "      <td id=\"T_cfc81_row6_col8\" class=\"data row6 col8\" >17463</td>\n",
              "      <td id=\"T_cfc81_row6_col9\" class=\"data row6 col9\" >51.862500</td>\n",
              "      <td id=\"T_cfc81_row6_col10\" class=\"data row6 col10\" >S</td>\n",
              "      <td id=\"T_cfc81_row6_col11\" class=\"data row6 col11\" >1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_cfc81_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n",
              "      <td id=\"T_cfc81_row7_col0\" class=\"data row7 col0\" >8</td>\n",
              "      <td id=\"T_cfc81_row7_col1\" class=\"data row7 col1\" >0</td>\n",
              "      <td id=\"T_cfc81_row7_col2\" class=\"data row7 col2\" >3</td>\n",
              "      <td id=\"T_cfc81_row7_col3\" class=\"data row7 col3\" >Palsson, Master. Gosta Leonard</td>\n",
              "      <td id=\"T_cfc81_row7_col4\" class=\"data row7 col4\" >male</td>\n",
              "      <td id=\"T_cfc81_row7_col5\" class=\"data row7 col5\" >2.000000</td>\n",
              "      <td id=\"T_cfc81_row7_col6\" class=\"data row7 col6\" >3</td>\n",
              "      <td id=\"T_cfc81_row7_col7\" class=\"data row7 col7\" >1</td>\n",
              "      <td id=\"T_cfc81_row7_col8\" class=\"data row7 col8\" >349909</td>\n",
              "      <td id=\"T_cfc81_row7_col9\" class=\"data row7 col9\" >21.075000</td>\n",
              "      <td id=\"T_cfc81_row7_col10\" class=\"data row7 col10\" >S</td>\n",
              "      <td id=\"T_cfc81_row7_col11\" class=\"data row7 col11\" >0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "💾 Cleaned dataset saved as /content/titanic_cleaned_portfolio.csv\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 📌 Step 04: Summary Statistics\n",
        "\n",
        "print(\"📊 Summary Statistics\\n\")\n",
        "\n",
        "# Calculate statistics\n",
        "summary_stats = df.describe().T.reset_index()\n",
        "summary_stats.rename(columns={\n",
        "    'index': 'Feature',\n",
        "    'count': 'Count',\n",
        "    'mean': 'Mean',\n",
        "    'std': 'Std Dev',\n",
        "    'min': 'Min',\n",
        "    '25%': 'Q1 (25%)',\n",
        "    '50%': 'Median (50%)',\n",
        "    '75%': 'Q3 (75%)',\n",
        "    'max': 'Max'\n",
        "}, inplace=True)\n",
        "\n",
        "# Round numeric values for cleaner output\n",
        "summary_stats = summary_stats.round(2)\n",
        "\n",
        "# Display nicely formatted table\n",
        "from tabulate import tabulate\n",
        "print(tabulate(summary_stats, headers='keys', tablefmt='fancy_grid', showindex=False))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-7nE4YQe5nIM",
        "outputId": "c032972e-8790-4bf6-f2ec-6bb630e41489"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "📊 Summary Statistics\n",
            "\n",
            "╒═════════════╤═════════╤════════╤═══════════╤═══════╤════════════╤════════════════╤════════════╤════════╕\n",
            "│ Feature     │   Count │   Mean │   Std Dev │   Min │   Q1 (25%) │   Median (50%) │   Q3 (75%) │    Max │\n",
            "╞═════════════╪═════════╪════════╪═══════════╪═══════╪════════════╪════════════════╪════════════╪════════╡\n",
            "│ PassengerId │     891 │ 446    │    257.35 │  1    │     223.5  │         446    │      668.5 │ 891    │\n",
            "├─────────────┼─────────┼────────┼───────────┼───────┼────────────┼────────────────┼────────────┼────────┤\n",
            "│ Survived    │     891 │   0.38 │      0.49 │  0    │       0    │           0    │        1   │   1    │\n",
            "├─────────────┼─────────┼────────┼───────────┼───────┼────────────┼────────────────┼────────────┼────────┤\n",
            "│ Age         │     891 │  29.11 │     13.3  │  0.42 │      21.5  │          26    │       36   │  80    │\n",
            "├─────────────┼─────────┼────────┼───────────┼───────┼────────────┼────────────────┼────────────┼────────┤\n",
            "│ SibSp       │     891 │   0.52 │      1.1  │  0    │       0    │           0    │        1   │   8    │\n",
            "├─────────────┼─────────┼────────┼───────────┼───────┼────────────┼────────────────┼────────────┼────────┤\n",
            "│ Parch       │     891 │   0.38 │      0.81 │  0    │       0    │           0    │        0   │   6    │\n",
            "├─────────────┼─────────┼────────┼───────────┼───────┼────────────┼────────────────┼────────────┼────────┤\n",
            "│ Fare        │     891 │  32.2  │     49.69 │  0    │       7.91 │          14.45 │       31   │ 512.33 │\n",
            "├─────────────┼─────────┼────────┼───────────┼───────┼────────────┼────────────────┼────────────┼────────┤\n",
            "│ Cabin_Known │     891 │   0.23 │      0.42 │  0    │       0    │           0    │        0   │   1    │\n",
            "╘═════════════╧═════════╧════════╧═══════════╧═══════╧════════════╧════════════════╧════════════╧════════╛\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Load your cleaned Titanic dataset - update path if needed\n",
        "df = pd.read_csv('/content/titanic_cleaned_portfolio.csv')\n",
        "\n",
        "# Set seaborn style and palette\n",
        "sns.set_theme(style=\"whitegrid\")\n",
        "PALETTE = [\"#4C78A8\", \"#72B7B2\"]  # Blue & teal\n",
        "\n",
        "\n",
        "# 1️⃣ Bar plot for Embarked survival counts\n",
        "plt.figure(figsize=(7,5))\n",
        "sns.countplot(data=df, x='Embarked', hue='Survived', palette=PALETTE)\n",
        "plt.title('Survival Counts by Embarked Port')\n",
        "plt.xlabel('Embarked')\n",
        "plt.ylabel('Count')\n",
        "plt.legend(title='Survived', labels=['No', 'Yes'])\n",
        "plt.show()\n",
        "\n",
        "# 2️⃣ Histograms / KDE for Age and Fare\n",
        "\n",
        "# Age histogram + KDE\n",
        "plt.figure(figsize=(7,5))\n",
        "sns.histplot(df['Age'], kde=True, color=PALETTE[0], bins=30)\n",
        "plt.title('Age Distribution')\n",
        "plt.xlabel('Age')\n",
        "plt.ylabel('Count')\n",
        "plt.show()\n",
        "\n",
        "# Fare histogram + KDE\n",
        "plt.figure(figsize=(7,5))\n",
        "sns.histplot(df['Fare'], kde=True, color=PALETTE[1], bins=30)\n",
        "plt.title('Fare Distribution')\n",
        "plt.xlabel('Fare')\n",
        "plt.ylabel('Count')\n",
        "plt.show()\n",
        "\n",
        "# 3️⃣ Box plot for Fare by Survival\n",
        "plt.figure(figsize=(7,5))\n",
        "sns.boxplot(data=df, x='Survived', y='Fare', palette=PALETTE)\n",
        "plt.title('Fare Distribution by Survival')\n",
        "plt.xlabel('Survived (0=No, 1=Yes)')\n",
        "plt.ylabel('Fare')\n",
        "plt.show()\n",
        "\n",
        "# 4️⃣ FacetGrid: Age distribution by Survival split by Gender\n",
        "g = sns.FacetGrid(df, col='Sex', hue='Survived', height=5, aspect=1)\n",
        "g.map(sns.kdeplot, 'Age', fill=True, common_norm=False, alpha=0.5)\n",
        "g.add_legend(title='Survived', labels=['No', 'Yes'])\n",
        "g.set_axis_labels('Age', 'Density')\n",
        "g.fig.suptitle('Age Distribution by Survival and Gender', y=1.05, fontsize=16)\n",
        "plt.show()\n",
        "\n",
        "# Alternatively, FacetGrid split by Pclass\n",
        "g = sns.FacetGrid(df, col='Pclass', hue='Survived', height=5, aspect=1)\n",
        "g.map(sns.kdeplot, 'Age', fill=True, common_norm=False, alpha=0.5)\n",
        "g.add_legend(title='Survived', labels=['No', 'Yes'])\n",
        "g.set_axis_labels('Age', 'Density')\n",
        "g.fig.suptitle('Age Distribution by Survival and Passenger Class', y=1.05, fontsize=16)\n",
        "plt.show()\n",
        "\n",
        "# 5️⃣ Pairplot for numeric features with survival hue\n",
        "num_cols = ['Age', 'Fare', 'SibSp', 'Parch', 'FamilySize']\n",
        "sns.pairplot(df[num_cols + ['Survived']], hue='Survived', palette=PALETTE, diag_kind='kde', plot_kws={'alpha':0.6})\n",
        "plt.suptitle('Pairplot of Numeric Features by Survival', y=1.02, fontsize=16)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "dUnhRv6cHU48",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 356
        },
        "outputId": "eb18a6d2-482d-4c63-b2fa-33816458c53b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "FileNotFoundError",
          "evalue": "[Errno 2] No such file or directory: '/content/titanic_cleaned_portfolio.csv'",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m/tmp/ipython-input-542422702.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;31m# Load your cleaned Titanic dataset - update path if needed\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 6\u001b[0;31m \u001b[0mdf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'/content/titanic_cleaned_portfolio.csv'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      7\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0;31m# Set seaborn style and palette\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36mread_csv\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\u001b[0m\n\u001b[1;32m   1024\u001b[0m     \u001b[0mkwds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkwds_defaults\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1025\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1026\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_read\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1027\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1028\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    618\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    619\u001b[0m     \u001b[0;31m# Create the parser.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 620\u001b[0;31m     \u001b[0mparser\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mTextFileReader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    621\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    622\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mchunksize\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0miterator\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[1;32m   1618\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1619\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhandles\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mIOHandles\u001b[0m \u001b[0;34m|\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1620\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_make_engine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1621\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1622\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_make_engine\u001b[0;34m(self, f, engine)\u001b[0m\n\u001b[1;32m   1878\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;34m\"b\"\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1879\u001b[0m                     \u001b[0mmode\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;34m\"b\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1880\u001b[0;31m             self.handles = get_handle(\n\u001b[0m\u001b[1;32m   1881\u001b[0m                 \u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1882\u001b[0m                 \u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/io/common.py\u001b[0m in \u001b[0;36mget_handle\u001b[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[1;32m    871\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mencoding\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;34m\"b\"\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    872\u001b[0m             \u001b[0;31m# Encoding\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 873\u001b[0;31m             handle = open(\n\u001b[0m\u001b[1;32m    874\u001b[0m                 \u001b[0mhandle\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    875\u001b[0m                 \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: '/content/titanic_cleaned_portfolio.csv'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(df.shape)\n",
        "print(df.columns)\n",
        "df.head(3)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 176
        },
        "id": "OORfmdK950Sr",
        "outputId": "48723ab1-44d9-437e-dcfb-881905bc0aa5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "name 'df' is not defined",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m/tmp/ipython-input-3379052404.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhead\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'df' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "add a summary markdown table of key insights (like “Women survived more than men”, “Higher class = higher survival”) at the end, so your GitHub README looks polished?o add pairplots / histograms for numeric features (Age, Fare)"
      ],
      "metadata": {
        "id": "RnnrUW1E7ALT"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}